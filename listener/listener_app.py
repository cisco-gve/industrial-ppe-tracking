from flask import Flask, render_template, request, session, redirect 
import requests
import json
import pymongo
from pymongo import MongoClient



#location of MongoDB using Docker hostnames. Only valid in Compose
mongoAddr = "database:27017"



#initialise the MongoDB tables
client = MongoClient(mongoAddr)
locationDB = client.locationDB
locationTable = locationDB.locationTable
groupsTable = locationDB.groupsTable



# Used to get location of any tracked client from CMX using Mac Address
def GetLocation(macAddress):
    try:
        response = requests.request("GET" , "http://cmxlocationsandbox.cisco.com/api/location/v2/clients?macAddress="+macAddress , auth=('learning','learning'), verify=False )
        status_code = response.status_code
        if (status_code == 201):
            clientJSON = response.text
            clientDetail = json.loads(clientJSON)
            return clientDetail
        else:
            response.raise_for_status()
            print("Error occured in POST -->"+(response.text))
    except requests.exceptions.HTTPError as err:
        print ("Error in connection -->"+str(err))
    finally:
        if response : response.close()


# Flask App provides Web form for Admins to define the tracking policy, is also a listener for notifications from CMX
app = Flask(__name__)
app.config.from_object(__name__)


#/location is used as the listener for notifications generated by CMX
@app.route('/location',methods=['POST'])
def listener():
	#Load data coming from CMX, insert it into MongoDB
    
    data = json.loads(request.data)
    print (data)
    locationTable.insert_one(data)

    return "OK"

    #Grab the tracking policy from Mongo
    personCheck = groupsTable.find_one()
    #Check the tracking data coming in against the first person defined in policy
    if data['notifications'][0]['deviceId'] == personCheck['user1']:
        #If there was a match for the person, ask CMX about the location of the first PPE
        
        ppeDetail = GetLocation(personCheck['ppe1'])
        print (ppeDetail)
        #ppeCoordinates = ppeDetail[0]['mapCoordinate']
        #Print both sets of coordinates. In future our tracking logic will go here
        #print (ppeCoordinates)
        #print (data[0]['mapCoordinate'])

    return 'OK'


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=29171, debug=True)